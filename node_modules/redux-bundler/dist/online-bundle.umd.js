(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('redux-bundler')) :
  typeof define === 'function' && define.amd ? define(['redux-bundler'], factory) :
  (global.reduxBundler = factory(global.reduxBundler));
}(this, (function (reduxBundler) {
  var OFFLINE = 'OFFLINE';
  var ONLINE = 'ONLINE';
  var onlineBundle = {
    name: 'online',
    selectIsOnline: function (state) { return state.online; },

    getReducer: function getReducer() {
      var initialState = reduxBundler.IS_BROWSER ? navigator.onLine : true;
      return function (state, ref) {
        if ( state === void 0 ) state = initialState;
        var type = ref.type;

        if (type === OFFLINE) { return false; }
        if (type === ONLINE) { return true; }
        return state;
      };
    },

    init: function init(store) {
      var removeOnlineListener = reduxBundler.addGlobalListener('online', function () { return store.dispatch({
        type: ONLINE
      }); });
      var removeOfflineListener = reduxBundler.addGlobalListener('offline', function () { return store.dispatch({
        type: OFFLINE
      }); });
      return function () {
        removeOnlineListener();
        removeOfflineListener();
      };
    }

  };

  return onlineBundle;

})));
