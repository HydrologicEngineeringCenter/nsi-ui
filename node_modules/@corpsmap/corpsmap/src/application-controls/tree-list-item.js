import React from 'react';
import TreeList from './tree-list';
import TreeListFolder from './tree-list-folder';
import classnames from 'classnames';
import _ from 'lodash';

class TreeListItem extends React.Component {
  constructor(props){
    super(props);

    this.state = {
      collapsed: props.item.collapsed
    }

    this.renderItemComponent = this.renderItemComponent.bind(this);
    this.handleClick = this.handleClick.bind(this);
    this.toggleCollapsed = this.toggleCollapsed.bind(this);
  }

  toggleCollapsed(){
    this.setState({ collapsed: !this.state.collapsed });
  }

  handleClick(e){
    const { item, onSelect } = this.props;
    onSelect({
      ctrl: e.ctrlKey,
      shift: e.shiftKey,
      item: item
    });
  }

  renderItemComponent(){
    const { item, components, componentMatches } = this.props;
    const { collapsed } = this.state;

    if(!item.leaf) return <TreeListFolder item={item} collapsed={collapsed} toggleCollapsed={this.toggleCollapsed}/>

    let Comp = components[0];
    if(componentMatches.length){
      for(let i = 0; i < componentMatches.length; i++){
        if(_.isMatch(item, componentMatches[i])){
          Comp = components[i];
          break;
        }
      }
    }
    return <Comp item={item} />
  }

  render(){
    const { item, components, componentMatches, onSelect } = this.props;
    const { collapsed } = this.state;

    const itemClass = classnames({
      "tree-list-item": true,
      "hidden": false 
    })

    return (
      <li className={itemClass} onClick={this.handleClick}>
        { 
          this.renderItemComponent() 
        }
        <TreeList items={item.children} item={item} collapsed={collapsed} components={components} componentMatches={componentMatches} onSelect={onSelect}/>
      </li>
    )
  }
}

export default TreeListItem;