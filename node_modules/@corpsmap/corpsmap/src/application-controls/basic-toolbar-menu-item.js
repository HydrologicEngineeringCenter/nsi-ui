import React from "react";
import classnames from "classnames";

class BasicToolbarMenuItem extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      showSubmenu: false
    };
    this.renderTextContent = this.renderTextContent.bind(this);
    this.renderSubmenu = this.renderSubmenu.bind(this);
    this.showSubmenu = this.showSubmenu.bind(this);
    this.hideSubmenu = this.hideSubmenu.bind(this);
  }

  renderTextContent() {
    const { liveDangerously, text } = this.props;
    if (!liveDangerously) return text;
    return <span dangerouslySetInnerHTML={{ __html: text }}></span>;
  }

  renderSubmenu() {
    const { children, disableSubmenu } = this.props;
    const { showSubmenu } = this.state;
    if (!children) return null;
    const submenuCls = classnames({
      "pull-right": true,
      hidden: disableSubmenu
    });
    const cls = classnames({
      open: showSubmenu
    });
    return (
      <div className={submenuCls}>
        <i className="mdi mdi-menu-right" />
        <div
          style={{ position: "relative", top: -31, left: 33 }}
          className={cls}
        >
          {children}
        </div>
      </div>
    );
  }

  showSubmenu() {
    this.setState({ showSubmenu: true });
  }

  hideSubmenu() {
    this.setState({ showSubmenu: false });
  }

  renderDisabled() {
    const { passProps, iconClass } = this.props;
    return (
      <li {...passProps} disabled={true}>
        <span>
          <i className={iconClass} />
          {this.renderTextContent()}
        </span>
      </li>
    );
  }

  render() {
    const {
      active,
      passProps,
      onClick,
      iconClass,
      disabled,
      title
    } = this.props;
    if (disabled) return this.renderDisabled();
    const itemClass = classnames({
      active: active
    });
    return (
      <li className={itemClass} {...passProps} onClick={onClick} title={title}>
        <span onMouseOver={this.showSubmenu} onMouseOut={this.hideSubmenu}>
          {this.renderSubmenu()}
          <i className={iconClass} />
          {this.renderTextContent()}
        </span>
      </li>
    );
  }
}

export default BasicToolbarMenuItem;
