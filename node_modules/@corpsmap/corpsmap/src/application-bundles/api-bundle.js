import xhr from 'xhr';

export default {
  name: 'api',

  getReducer: () => {
    const initialData = {
      root: process.env.REACT_APP_CM_ENV
    }

    return (state = initialData, { type, payload }) => {
      return state;
    }
  },

  selectApiRoot: (state) => {
    return process.env.NODE_ENV==='development' ?  state.api.root : state.windowLocation.origin;
  },

  getExtraArgs: (store) => {

    return {
      anonGet: (path, callback) => {
        const options = {
          url: path
        }
        xhr.get(options, callback)
      },

      apiGet: (path, callback) => {
        // const token = store.selectTokenRaw();
        const token = null;
        const options = {
          url: path
        }
        if(token){
          options.headers = {
            Authorization: "Bearer " + token
          }
        }
        xhr.get(options, callback)
      },

      apiPost: (path, payload, callback) => {
        // const token = store.selectTokenRaw();
        const token = null;
        const options = {
          url: path,
          json: payload
        }
        if(token){
          options.headers = {
            Authorization: "Bearer " + token
          }
        }
        xhr.post(options, callback)
      },

      apiDel: (path, callback) => {
        // const token = store.selectTokenRaw();
        const token = null;
        const options = {
          url: path
        }
        if(token){
          options.headers = {
            Authorization: "Bearer " + token
          }
        }
        xhr.del(options, callback)
      } 
    }
  }
}