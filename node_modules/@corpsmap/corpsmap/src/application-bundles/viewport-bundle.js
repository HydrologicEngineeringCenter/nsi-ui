import _ from 'lodash';

export default {
  name: 'viewport',

  getReducer(){
    const initialData = {
      h: window.innerHeight,
      w: window.innerWidth
    }

    return (state = initialData, { type, payload }) => {

      if(type === 'WINDOW_RESIZE'){
        return Object.assign({}, state, {
          h: window.innerHeight,
          w: window.innerWidth
        })
      }

      return state;
    }
  },

  doHandleResize: () => ({dispatch, store}) => {
    const map = store.selectMap();
    map.updateSize()
    dispatch({type:'WINDOW_RESIZE'});
  },

  selectViewportHeight: (state) => {
    return state.viewport.h;
  },

  selectViewportWidth: (state) => {
    return state.viewport.w;
  },

  init: (store) => {
    window.addEventListener('resize', _.debounce(store.doHandleResize, 300));
  }
}