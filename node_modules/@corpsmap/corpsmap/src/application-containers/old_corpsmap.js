import React from 'react';
import { connect } from 'redux-bundler-react';
import NotificationPane from '../core-plugins/notifications/notifications';
import NorthRegion from './north-region';
import SouthRegion from './south-region';
import ModalWindow from './modal-window';
import throttle from 'lodash/throttle';

class Corpsmap extends React.Component {
  constructor(props){
    super(props);
    this.renderNorthRegion = this.renderNorthRegion.bind(this);
    this.renderSouthRegion = this.renderSouthRegion.bind(this);
    this.renderModalWindow = this.renderModalWindow.bind(this);
    this.renderLoadingMask = this.renderLoadingMask.bind(this);
    this.resize = this.resize.bind(this);
    this.setHeight = throttle(this.setHeight, 300, { "trailing": true}).bind(this);
  }

  renderNorthRegion(){
    const { northHeight } = this.props;
    return (
      <NorthRegion height={northHeight} />
    )
  }

  renderSouthRegion(){
    const { doCloseSouthRegion, theme, southHeight } = this.props;
    if(!southHeight) return null;
    return (
      <div>
        <div draggable="true" onDrag={ this.resize } className={ theme + " n-s-drag-handle"}>
          <span onClick={ doCloseSouthRegion } className="pull-right">
            <i className="mdi mdi-close"></i>
          </span>
        </div>
        <SouthRegion height={southHeight-5} />
      </div>
    )
  }

  renderModalWindow(){
    return <ModalWindow />
  }

  renderLoadingMask(){
    const { pluginsAreLoading } = this.props;
    if(!pluginsAreLoading) return null;
    return (
      <div style={{position:'absolute',top:0,bottom:0,left:0,right:0,backgroundColor:'#555',opacity:0.5}}>
        <h1>loading...</h1>
      </div>
    )
  }

  setHeight(newY){
    const { doResizeSouthRegion } = this.props;

    // if newY = distance of cursor from top of screen
    // set hNorth = window.innerHeight - newY
    // and hSourth = window.innerHeight - hNorth
    if(newY > 0){
      doResizeSouthRegion({
        hNorth: newY,
        hSouth: window.innerHeight - newY
      })
    }
  }

  resize(e){
    e.preventDefault();
    const newY = e.clientY;
    this.setHeight(newY);
  }

  render(){
    return (
      <div className="cm-container-fluid" style={{padding:0}}>
        { this.renderNorthRegion() }
        { this.renderSouthRegion() }
        <ModalWindow />
        <NotificationPane />
        { this.renderLoadingMask() }
      </div>
    )
  }
}

export default connect(
  'selectTheme',
  'selectPluginsAreLoading',
  'selectNorthHeight', 
  'selectSouthHeight', 
  'doResizeSouthRegion',
  'doCloseSouthRegion',
  Corpsmap
);