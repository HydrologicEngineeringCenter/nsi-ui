import React from "react";
import { connect } from "redux-bundler-react";
import ErrorBoundary from "../utils/error-boundary";

class PrimaryPanel extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      width: props.primaryPanelWidth,
      left: 49
    };
    this.handleResize = this.handleResize.bind(this);
    this.updateStore = this.updateStore.bind(this);
  }

  handleResize(e) {
    e.preventDefault();
    let { left } = this.state;
    if (e.pageX) {
      this.setState({
        width: e.pageX - left
      });
    }
  }

  updateStore() {
    const { doPrimaryPanelResize } = this.props;
    doPrimaryPanelResize(this.state);
  }

  render() {
    const {
      primaryPanelChildren,
      primaryPanelOptions,
      primaryPanelTop
    } = this.props;
    const { left, width } = this.state;

    if (!primaryPanelChildren || !primaryPanelChildren.length) return null;

    return (
      <div
        className="sidebar-panel"
        style={{ top: primaryPanelTop, left: left, width: width }}
      >
        <ErrorBoundary>
          <div id="primary-panel-content">
            {primaryPanelChildren.map((component, i) => {
              const Comp = component;
              return <Comp key={i} {...primaryPanelOptions} />;
            })}
          </div>
        </ErrorBoundary>

        <div
          className="e-w-drag-handle"
          draggable="true"
          onDrag={this.handleResize}
          onDragEnd={this.updateStore}
        />
      </div>
    );
  }
}

export default connect(
  "selectPrimaryPanelTop",
  "selectPrimaryPanelChildren",
  "selectPrimaryPanelOptions",
  "selectPrimaryPanelWidth",
  "doPrimaryPanelResize",
  PrimaryPanel
);
