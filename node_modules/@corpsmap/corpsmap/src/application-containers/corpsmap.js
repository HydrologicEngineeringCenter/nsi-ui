import React from "react";
import { connect } from "redux-bundler-react";
import NorthRegion from "./north-region";
import SouthRegion from "./south-region";
import ModalWindow from "./modal-window";
import NotificationPane from "./notification-pane";
import debounce from "lodash/debounce";

class Corpsmap extends React.Component {
  constructor(props) {
    super(props);
    this.renderSouthRegion = this.renderSouthRegion.bind(this);
    this.setHeight = this.setHeight.bind(this);
    this.resize = this.resize.bind(this);

    this.setHeightDebounced = debounce(this.setHeight, 10);
  }

  componentDidMount() {
    const { doVLayoutSetHeight } = this.props;
    doVLayoutSetHeight(this.el.offsetHeight);
  }

  setHeight(clientY) {
    const { doVLayoutResize, vLayoutHeight } = this.props;
    if (clientY > 45 && clientY < vLayoutHeight) {
      const hNorth = clientY / vLayoutHeight;
      const hSouth = 1 - hNorth;
      doVLayoutResize(hNorth, hSouth);
    }
  }

  resize(e) {
    e.preventDefault();
    const clientY = e.clientY;
    this.setHeightDebounced(clientY);
  }

  renderSouthRegion() {
    const { doSouthRegionClose, theme, southHeight } = this.props;
    if (!southHeight) return null;
    return (
      <div>
        <div
          draggable="true"
          onDrag={this.resize}
          className={theme + " n-s-drag-handle"}
        >
          <span onClick={doSouthRegionClose} className="pull-right">
            <i className="mdi mdi-close"></i>
          </span>
        </div>
        <SouthRegion height={southHeight - 5} />
      </div>
    );
  }

  render() {
    const { northHeight } = this.props;
    return (
      <div
        className="corpsmap cm-container-fluid"
        style={{ padding: 0 }}
        ref={el => {
          this.el = el;
        }}
      >
        <NorthRegion height={northHeight} />
        {this.renderSouthRegion()}
        <ModalWindow />
        <NotificationPane />
      </div>
    );
  }
}

export default connect(
  "selectTheme",
  "selectNorthHeight",
  "selectSouthHeight",
  "selectVLayoutHeight",
  "doSouthRegionClose",
  "doVLayoutResize",
  "doVLayoutSetHeight",
  Corpsmap
);
