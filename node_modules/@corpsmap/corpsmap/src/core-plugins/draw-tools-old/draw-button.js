import React from 'react';
import { connect } from 'redux-bundler-react';
import { BasicToolbarButton, BasicToolbarMenu, BasicToolbarMenuItem, BasicToolbarMenuDivider, BasicToolbarSubmenu } from '../../application-controls';
import DrawToolItem from './draw-tool-item';

class DrawButton extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      mode: null
    }
    this.updateMode = this.updateMode.bind(this);
    this.handleDeactivate = this.handleDeactivate.bind(this);
    this.removeInteractions = this.removeInteractions.bind(this);
  }

  handleDeactivate(){
    this.setState({
      mode: null
    }, this.removeInteractions)
  }

  addInteractions(){
    this.removeInteractions();
    const {
      doDrawPointsAddInteractions,
      doDrawLinesAddInteractions,
      doDrawPolygonsAddInteractions,
      doDrawLabelsAddInteractions,
      doDrawModifyAddInteractions
    } = this.props;
    const { mode } = this.state;
    switch(mode){
      case 'Point':
        return doDrawPointsAddInteractions();
      case 'LineString':
        return doDrawLinesAddInteractions();
      case 'Polygon':
        return doDrawPolygonsAddInteractions();
      case 'Labels':
        return doDrawLabelsAddInteractions();
      case 'Modify':
        return doDrawModifyAddInteractions();
      default:
        return;
    }
  }

  removeInteractions(){
    const { 
      doDrawPointsRemoveInteractions, 
      doDrawLinesRemoveInteractions,
      doDrawPolygonsRemoveInteractions,
      doDrawLabelsRemoveInteractions,
      doDrawModifyRemoveInteractions
    } = this.props;
    doDrawPointsRemoveInteractions();
    doDrawLinesRemoveInteractions();
    doDrawPolygonsRemoveInteractions();
    doDrawLabelsRemoveInteractions();
    doDrawModifyRemoveInteractions();
  }

  updateMode(e){
    const mode = e.currentTarget.dataset.mode;
    this.setState({
      mode: mode
    }, this.addInteractions)
  }

  render(){
    const { 
      drawPointsVisible,
      drawPointsActive,
      doDrawPointsToggleVisible ,

      drawLinesVisible,
      drawLinesActive,
      doDrawLinesToggleVisible ,

      drawPolygonsVisible,
      drawPolygonsActive,
      doDrawPolygonsToggleVisible,

      drawLabelsActive,
      drawModifyActive
    } = this.props;
    return (
      <BasicToolbarButton
        enabled={true}
        iconClass="mdi mdi-pencil"
        title="Draw Tools"
        onDeactivate={ this.handleDeactivate }
      >
        <BasicToolbarMenu>
          <BasicToolbarMenuItem
            active={ drawModifyActive }
            iconClass="ms ms-draw icon-inline"
            title="Modify Draw Features"
            text="Modify Draw Features"
            onClick={ this.updateMode }
            passProps={{"data-mode": 'Modify'}}
          />
          <BasicToolbarMenuItem
            active={ drawLabelsActive }
            iconClass="ms ms-label-o icon-inline"
            title="Add / Edit Labels"
            text="Add / Edit Labels"
            onClick={ this.updateMode }
            passProps={{"data-mode": 'Labels'}}
          />
          <BasicToolbarMenuDivider />
          <DrawToolItem
            active={ drawPointsActive }
            visible={ drawPointsVisible }
            iconClass="ms ms-draw-point icon-inline"
            title="Draw Points"
            text="Draw Points"
            onClick={ this.updateMode }
            passProps={{"data-mode": 'Point'}}
            onToggleVisibility={ doDrawPointsToggleVisible }
          />
          <DrawToolItem
            active={ drawLinesActive }
            visible={ drawLinesVisible }
            iconClass="ms ms-draw-line icon-inline"
            title="Draw Lines"
            text="Draw Lines"
            onClick={ this.updateMode }
            passProps={{"data-mode": 'LineString'}}
            onToggleVisibility={ doDrawLinesToggleVisible }
          />
          <DrawToolItem
            active={ drawPolygonsActive }
            visible={ drawPolygonsVisible }
            iconClass="ms ms-draw-polygon icon-inline"
            title="Draw Polygons"
            text="Draw Polygons"
            onClick={ this.updateMode }
            passProps={{"data-mode": 'Polygon'}}
            onToggleVisibility={ doDrawPolygonsToggleVisible }
          />
        </BasicToolbarMenu>
      </BasicToolbarButton>
    )
  }
}

export default connect(
  'selectDrawPointsVisible',
  'selectDrawPointsActive',
  'doDrawPointsToggleVisible',
  'doDrawPointsAddInteractions',
  'doDrawPointsRemoveInteractions',

  'selectDrawLinesVisible',
  'selectDrawLinesActive',
  'doDrawLinesToggleVisible',
  'doDrawLinesAddInteractions',
  'doDrawLinesRemoveInteractions',

  'selectDrawPolygonsVisible',
  'selectDrawPolygonsActive',
  'doDrawPolygonsToggleVisible',
  'doDrawPolygonsAddInteractions',
  'doDrawPolygonsRemoveInteractions',

  'selectDrawLabelsActive',
  'doDrawLabelsAddInteractions',
  'doDrawLabelsRemoveInteractions',

  'selectDrawModifyActive',
  'doDrawModifyAddInteractions',
  'doDrawModifyRemoveInteractions',

  DrawButton
);