import React from "react";
import { connect } from "redux-bundler-react";
import IdentifySidebarList from "./identify-sidebar-list";
import find from "lodash/find";

class IdentifySidebar extends React.Component {
  constructor(props) {
    super(props);
    this.renderResults = this.renderResults.bind(this);
  }

  renderResults() {
    const { identifyResults, cmLayerNames, uidMap } = this.props;
    const subLayerNameMatch = /[:](.+)/i;
    const components = [];
    let counter = 0;

    identifyResults.forEach((r) => {
      const id = r.dataset;
      const lyr = find(cmLayerNames, { teamDatasetId: id });
      const lyrName = !lyr ? uidMap[id] : lyr.displayName;

      Object.keys(r.result).forEach((key) => {
        const fc = r.result[key];
        if (fc && fc.features && fc.features.length) {
          const subLayer = subLayerNameMatch.exec(key);
          const subLayerName = subLayer
            ? subLayer[1] !== lyrName
              ? subLayer[0]
              : ""
            : "";
          components.push(
            <IdentifySidebarList
              features={fc.features}
              displayName={`${lyrName}${subLayerName}`}
              key={counter++}
            />
          );
        }
      });
    });

    return components;
  }

  render() {
    const { doPrimaryPanelClose } = this.props;

    return (
      <div>
        <div>
          <span
            onClick={doPrimaryPanelClose}
            style={{
              fontSize: 24,
              cursor: "pointer",
            }}
            title="Close"
          >
            <i className="mdi mdi-close"></i>
          </span>
        </div>
        <div className="thin-scrollbar sidebar-list" style={{ top: 32 }}>
          {this.renderResults()}
        </div>
      </div>
    );
  }
}

export default connect(
  "selectIdentifyResults",
  "selectCmLayerNames",
  "selectUidMap",
  "doPrimaryPanelClose",
  IdentifySidebar
);
