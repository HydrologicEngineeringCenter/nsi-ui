import React from "react";
import { connect } from "redux-bundler-react";
import {
  BasicToolbarButton,
  BasicToolbarMenu,
  BasicToolbarMenuItem,
  BasicToolbarMenuDivider,
  BasicToolbarSubmenu,
} from "../../application-controls";

class EditorButton extends React.Component {
  constructor(props) {
    super(props);

    this.startIdentify = this.startIdentify.bind(this);
    this.stopIdentify = this.stopIdentify.bind(this);
    this.setDisplayAs = this.setDisplayAs.bind(this);
  }

  startIdentify(e) {
    const { doStartIdentify } = this.props;
    const selectBy = e.currentTarget.dataset.selectby;
    doStartIdentify(selectBy);
  }

  stopIdentify() {
    const { doStopIdentify } = this.props;
    doStopIdentify();
  }

  setDisplayAs(e) {
    const { doSetDisplayAs } = this.props;
    const displayAs = e.currentTarget.dataset.displayas;
    doSetDisplayAs(displayAs);
  }

  render() {
    const { identifyDisplayAs, identifySelectBy, doPauseIdentify } = this.props;

    return (
      <BasicToolbarButton
        enabled={true}
        iconClass="ms ms-information"
        title="Identify"
        onDeactivate={doPauseIdentify}
      >
        <BasicToolbarMenu>
          <BasicToolbarMenuItem
            active={identifySelectBy === "point"}
            onClick={this.startIdentify}
            iconClass="ms ms-identify icon-inline"
            title="Identify by Point"
            text="Identify by Point"
            passProps={{ "data-selectby": "point" }}
          />
          <BasicToolbarMenuItem
            active={identifySelectBy === "polygon"}
            onClick={this.startIdentify}
            iconClass="ms ms-identify-box icon-inline"
            title="Identify by Polygon"
            text="Identify by Polygon"
            passProps={{ "data-selectby": "polygon" }}
          />
          <BasicToolbarMenuDivider />
          <BasicToolbarMenuItem
            active={false}
            onClick={this.stopIdentify}
            iconClass="mdi mdi-close icon-inline"
            title="Clear All Popup's"
            text="Clear All Popup's"
          />
          <BasicToolbarMenuItem
            active={false}
            iconClass="mdi mdi-tune icon-inline"
            title="Display Format"
            text="Display Format"
          >
            <BasicToolbarSubmenu>
              <BasicToolbarMenuItem
                active={identifyDisplayAs === "popup"}
                onClick={this.setDisplayAs}
                iconClass="mdi mdi-message-outline icon-inline"
                title="Display as Popups"
                text="Display as Popups"
                passProps={{ "data-displayas": "popup" }}
              />
              <BasicToolbarMenuItem
                active={identifyDisplayAs === "sidebar"}
                onClick={this.setDisplayAs}
                iconClass="mdi mdi-format-list-bulleted icon-inline"
                title="Display in Sidebar List"
                text="Display in Sidebar List"
                passProps={{ "data-displayas": "sidebar" }}
              />
              <BasicToolbarMenuItem
                disabled={false}
                active={identifyDisplayAs === "table"}
                onClick={this.setDisplayAs}
                iconClass="ms ms-table icon-inline"
                title="Display in Attribute Table"
                text="Display in Attribute Table"
                passProps={{ "data-displayas": "table" }}
              />
            </BasicToolbarSubmenu>
          </BasicToolbarMenuItem>
        </BasicToolbarMenu>
      </BasicToolbarButton>
    );
  }
}

export default connect(
  "doSetDisplayAs",
  "doStartIdentify",
  "doStopIdentify",
  "doPauseIdentify",
  "selectIdentifyDisplayAs",
  "selectIdentifySelectBy",
  EditorButton
);
