import React from "react";
import { connect } from 'redux-bundler-react';
import CatalogList from "./catalog-list";
import { SearchInput } from '../../application-controls';
import _ from 'lodash';

class Catalog extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      height: window.innerHeight * 0.75,
      items: [],
      filterString: ""
    };

    this.close = this.close.bind(this);
    this.updateFilterString = this.updateFilterString.bind(this);
    this.queryCatalog = this.queryCatalog.bind(this);

    this.debouncedQuery = _.debounce(this.queryCatalog, 200);
  }    

  componentDidMount(){
    this.searchInput.setFocus();
  }

  close() {
    const { doModalClose } = this.props;
    doModalClose();
  }

  updateAddedLayers = () => {
    // this.setState({
    //   addedLayers: _.flatten(app.actions.getCorpsMapLayerIds())
    // })
  }

  updateFilterString(val){
    this.setState({
        filterString: val
    }, this.debouncedQuery);
  }

  queryCatalog(){
    const { doCatalogQuery } = this.props;
    const { filterString } = this.state;
    if(filterString.length > 2){
      doCatalogQuery(filterString);
    }else{
      doCatalogQuery('');
    }
  }

  render() {
    const { theme } = this.props;
    const { height, filterString } = this.state;
    return (
      <div>
        <div className={"modal-header " + theme}>
          CorpsMap Data Catalog
        </div>
        <div
          className="modal-body"
          style={{ height: height, top: 0, bottom: 0, left: 0, right: 0 }}
        >
          <p>
            Search for datasets using the input below, click on a dataset to add
            it to the map, once added, the dataset will be highlighted. Remove
            datasets from the map using the controls in the layer tree.
          </p>
          <SearchInput ref={(el) => { this.searchInput = el }} filterString={filterString} onUpdate={this.updateFilterString} theme={theme} placeholder="Search dataset name, team names and descriptions here..." size="small" />
          <CatalogList onSetSearchTerm={ this.updateFilterString }/>
        </div>
        <div className="modal-footer">
          <button className={"btn btn-theme " + theme} onClick={this.close}>
            Close
          </button>
        </div>
      </div>
    )
  }
}

export default connect(
  'selectTheme',
  'doModalClose',
  'doCatalogQuery',
  Catalog
);