import React from 'react';
import { connect } from 'redux-bundler-react';
import RGBOptions from './natick-rgb-options';
import { getSource } from '../../../openlayers-utils/layer-utilities';

function getUrlParameters(url) { 
  var parameters = {};
      
  url.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
    parameters[key] = value;
  });
    
  return parameters;
}

class NatickRgb extends React.Component {
  constructor(props){
    super(props);
    const lyr = props.layer;

    console.log(lyr)

    let rgb = ['3','2','1'];
    let params = {};
    let rootUrl = '';
    const active = lyr.url && lyr.url.indexOf('&rgb=') !== -1;

    if(active){
      params = getUrlParameters(lyr.url);
      rgb = params.rgb.split(',');
      rootUrl = lyr.url.split('?')[0];
    }

    this.state = {
      active: active,
      params: params,
      rootUrl: rootUrl,
      r: rgb[0],
      g: rgb[1],
      b: rgb[2]
    }
    this.handleClick = this.handleClick.bind(this);
    this.handleChange = this.handleChange.bind(this);
    this.updateLayer = this.updateLayer.bind(this);
  }

  handleClick(e){
    const { confirm } = this.state;
    const { doTreeRemove, doRenderTreeView, layer } = this.props;
    if(!confirm) return this.setState({ confirm: true });
    doTreeRemove(layer.uid);
    doRenderTreeView();
  }

  updateLayer(){
    const { params, rootUrl, r, g, b } = this.state;
    const { layer, doLayerSetVisible } = this.props;
    doLayerSetVisible(layer.uid, false);
    const url = `${rootUrl}?url=${params.url}&rgb=${r},${g},${b}&nodata=${params.nodata}`;
    const newSource = getSource({
      serviceType: 'XYZ',
      url: url
    })
    layer.mapLayer.setSource(newSource);
    layer.url = url;
    doLayerSetVisible(layer.uid, true);
  }

  handleChange(newVal){
    this.setState(newVal, () => {
      this.updateLayer();
    })
  }

  render(){
    const { active, r, g, b } = this.state;
    if(!active) return null;
    return (
      <div>
        <hr/>
        <div className="row" style={{paddingTop: '25px'}}>
          <div className="col-sm-4">
            <RGBOptions title="Red Band" color="r" value={r} onChange={this.handleChange} />
          </div>
          <div className="col-sm-4">
            <RGBOptions title="Green Band" color="g" value={g} onChange={this.handleChange} />
          </div>
          <div className="col-sm-4">
            <RGBOptions title="Blue Band" color="b" value={b} onChange={this.handleChange} />
          </div>
        </div>
      </div>
    )
  }
}

export default connect(
  'doLayerSetVisible',
  NatickRgb
);