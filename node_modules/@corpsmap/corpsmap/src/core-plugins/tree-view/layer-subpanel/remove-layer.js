/* eslint jsx-a11y/anchor-is-valid: 0 */
import React from 'react';
import { connect } from 'redux-bundler-react';

class RemoveLayer extends React.Component {
  constructor(props){
    super(props);
    this.state = {
      confirm: false
    }
    this.handleClick = this.handleClick.bind(this);
    this.renderButtons = this.renderButtons.bind(this);
    this.cancelRemove = this.cancelRemove.bind(this);
  }

  cancelRemove(){
    this.setState({ confirm: false });
  }

  handleClick(e){
    const { confirm } = this.state;
    const { doTreeRemove, doRenderTreeView, layer } = this.props;
    if(!confirm) return this.setState({ confirm: true });
    doTreeRemove(layer.uid);
    doRenderTreeView();
  }

  renderButtons(){
    const { confirm } = this.state;

    if(confirm){
      return (
        [
          <a href="#" key={0} onClick={ this.cancelRemove } className="cm-btn cm-btn-default cm-btn-sm">Cancel</a>,
          <a href="#" key={1} onClick={ this.handleClick } className="cm-btn cm-btn-danger cm-btn-sm">Confirm</a>
        ]
      )
    }else{
      return (
        <a href="#" onClick={ this.handleClick } className="cm-btn cm-btn-default cm-btn-sm">Remove Layer</a>
      )
    }
  }

  render(){
    return (
      <div>
        <hr/>
        <div className="cm-btn-group cm-btn-group-justified">
          { this.renderButtons() }
        </div>
      </div>
    )
  }
}

export default connect(
  'doTreeRemove',
  'doRenderTreeView',
  RemoveLayer
);