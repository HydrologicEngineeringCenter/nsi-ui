import React from 'react';
import { DropTarget } from 'react-dnd';
import classnames from 'classnames';

const dropTargetContract = {
  canDrop(props, monitor){
    return true;
  },
  hover(props, monitor, component){

  },
  drop(props, monitor, component){
    return {destId: props.destId, direction: props.direction, method: 'insert'}
  }
}

function collect(connect, monitor) {
  return {
    connectDropTarget: connect.dropTarget(),
    isOver: monitor.isOver(),
    isOverCurrent: monitor.isOver({ shallow: true }),
    canDrop: monitor.canDrop(),
    itemType: monitor.getItemType()
  };
}

class BoundaryDropTarget extends React.Component {
  render(){
    
    var isOver = this.props.isOver;
    var connectDropTarget = this.props.connectDropTarget;

    var className = classnames({
      "bndry-drop-target": true,
      "hover": isOver
    })

    return connectDropTarget(<div className={className} ></div>)
  }
}

export default DropTarget(['dataset', 'tree-list-item'], dropTargetContract, collect)(BoundaryDropTarget);