import React from "react";
import { connect } from "redux-bundler-react";
import classnames from "classnames";

class TreeListItemFolder extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      contentEditable: false,
      text: props.item.displayName
    };
    this.keyDown = this.keyDown.bind(this);
    this.toggleCollapsed = this.toggleCollapsed.bind(this);
    this.toggleContentEditable = this.toggleContentEditable.bind(this);
    this.setText = this.setText.bind(this);
    this.saveToStore = this.saveToStore.bind(this);
  }

  keyDown(e) {
    if (e.keyCode === 13) {
      e.preventDefault();
      this.saveToStore();
    }
  }

  toggleCollapsed() {
    const { item, doTreeSetCollapsed } = this.props;
    doTreeSetCollapsed(item.uid, !item.collapsed);
  }

  toggleContentEditable(e) {
    const el = e.currentTarget;
    this.setState(
      {
        contentEditable: !this.state.contentEditable
      },
      () => {
        const txt = el.innerHTML;
        this.tempText = txt;
      }
    );
  }

  setText(e) {
    const el = e.currentTarget;
    const txt = el.innerHTML;
    this.setState({ text: txt });
  }

  saveToStore() {
    const { item, doTreeUpdate } = this.props;
    this.setState(
      {
        contentEditable: false
      },
      function() {
        doTreeUpdate(item.uid, {
          displayName: this.state.text
        });
      }
    );
  }

  render() {
    const { item, isOver } = this.props;
    const { contentEditable, text } = this.state;

    if (!item.passFilter) return null;

    const itemClass = classnames({
      "tree-list-item-hover": isOver
    });
    const iconClass = classnames({
      mdi: true,
      "mdi-folder-open": !item.collapsed,
      "mdi-folder": item.collapsed
    });
    const fontStyle = contentEditable ? "italic" : "normal";
    const divStyle = {
      fontStyle: fontStyle,
      display: "inline-block",
      paddingLeft: "8px"
    };
    const count = item.children.length;
    return (
      <div>
        <i
          title="Click to collapse or expand"
          onClick={this.toggleCollapsed}
          className={iconClass}
          style={{ fontSize: "16px", cursor: "pointer" }}
        ></i>
        <span>
          <div
            className={itemClass}
            style={divStyle}
            onInput={this.setText}
            onBlur={this.saveToStore}
            onKeyDown={this.keyDown}
            onDoubleClick={this.toggleCollapsed}
            contentEditable={contentEditable}
            dangerouslySetInnerHTML={{ __html: text }}
          ></div>
          <span>{" (" + count + ")"}</span>
        </span>
      </div>
    );
  }
}

export default connect(
  "doTreeUpdate",
  "doTreeSetCollapsed",
  TreeListItemFolder
);
