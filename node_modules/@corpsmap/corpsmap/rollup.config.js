import babel from "rollup-plugin-babel";
import commonjs from "rollup-plugin-commonjs";
import resolve from "rollup-plugin-node-resolve";
import replace from "rollup-plugin-replace";
import css from "rollup-plugin-css-only";
import postcss from 'rollup-plugin-postcss';
import json from 'rollup-plugin-json';
import pkg from './package.json';


const NODE_ENV = process.env.NODE_ENV || "development";
const outputFile = NODE_ENV === "production" ? "./lib/prod.js" : "./lib/dev.js";

export default {
  input: "./src/index.js",
  output: {
    file: outputFile,
    format: "cjs"
  },
  plugins: [
    replace({
      "process.env.NODE_ENV": JSON.stringify(NODE_ENV)
    }),
    babel({
      plugins:[['import', { libraryName: 'antd', style: true }]],
      extensions: ['.js', '.jsx', '.ts', '.tsx'],
      exclude: "node_modules/**"
    }),
    css({
      output: "./css/corpsmap.css"
    }),
    resolve({
      module: true,
      jsnext: true,
      customResolveOptions: {
        moduleDirectory: 'node_modules'
      }
    }),
    json(),
    commonjs(),
    postcss({
      extensions: ['.css', '.scss', '.less'],
      use: ['sass', ['less', { javascriptEnabled: true }]],
    })
  ],
  external: [
    ...Object.keys(pkg.devDependencies || {}),
    ...Object.keys(pkg.peerDependencies || {})
  ]
};
